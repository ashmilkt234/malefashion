<%- include('../partials/admin/header') %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Product Management Dashboard</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/umd/lucide.js"></script>
  <link rel="stylesheet" href="/css/product.css">
  <link rel="stylesheet" href="/css/dashboard.css">
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    th, td {
      padding: 12px 16px;
      border-bottom: 1px solid #ddd;
      text-align: left;
    }

    thead {
      background-color: #f5f5f5;
    }

    .product-image {
      width: 40px;
      height: 40px;
      background-color: #ccc;
      border-radius: 5px;
    }

    .color-dots {
      display: flex;
      gap: 5px;
    }

    .color-dot {
      width: 10px;
      height: 10px;
      border-radius: 50%;
    }

    .color-black { background-color: black; }
    .color-gray { background-color: gray; }
    .color-pink { background-color: pink; }

    .action-btn {
      background: none;
      border: none;
      cursor: pointer;
      margin-right: 5px;
    }

    .pagination {
      display: flex;
      justify-content: space-between;
      margin-top: 20px;
      align-items: center;
    }
  </style>
</head>
<body>
  <div class="main-content">

 <div class="header">
      <div class="header-left">
        <button class="back-btn">
          <i data-lucide="chevron-left"></i>
        </button>
        <h1 class="header-title">Product Page</h1>
      </div>
      <div class="header-right">
        <div class="search-container">
          <i data-lucide="search" class="search-icon"></i>
          <input type="text" id="searchInput" placeholder="Search products..."/>
        </div>
      </div>
    </div>


 <div class="products-section">
      <div class="products-card">
        <div class="products-header">
          <h2 class="products-title">Products</h2>
          <a href="/admin/addProduct" class="add-link">+ Add Product</a>
        </div>

        <table>
          <thead>
            <tr>
              <!-- <th>Image</th> -->
              <th>Product Name</th>
              <!-- <th>Brand</th> -->
              <th>Category</th>
              <th>Price</th>
              <th>Stock</th>
              <!-- <th>Available Colors</th> -->
              <!-- <th>Actions</th> -->
            </tr>
          </thead>
          <tbody id="tableBody">
          <% for(let i=data.length-1;i>=0;i--){%>
            <tr>
                <td><%=data[i].productName%></td>
                <td><%=data[i].category.name%></td>
                <td><%=data[i].salesPrice%></td>
                        <td><%=data[i].stock%></td>
            </tr>
            <%} %>
          </tbody>
        </table>

        <div class="pagination">
          <div class="pagination-info">
            Showing <span id="showingStart">1</span>-<span id="showingEnd">0</span> of <span id="totalCount">0</span>
          </div>
          <div class="pagination-controls">
            <button class="pagination-btn" id="prevBtn"><i data-lucide="chevron-left"></i></button>
            <button class="pagination-btn" id="nextBtn"><i data-lucide="chevron-right"></i></button>
          </div>
        </div>
      </div>
    </div>
  </div> 

  <script>
    
    lucide.createIcons();

    let products = [
      { id: 1, name: 'Loose Fit Jacket', brand: 'H&M', category: 'Shirt', price: 630.00, stock: 63, colors: ['black', 'gray', 'pink'] },
      { id: 2, name: 'Oversized Hoodie', brand: 'Zara', category: 'Hoodie', price: 799.00, stock: 20, colors: ['black', 'pink'] },
      { id: 3, name: 'Slim Fit Trousers', brand: 'Levis', category: 'Pants', price: 999.00, stock: 42, colors: ['gray'] },
      { id: 4, name: 'Casual Shirt', brand: 'Max', category: 'Shirt', price: 499.00, stock: 75, colors: ['black', 'gray'] },
      { id: 5, name: 'Printed T-shirt', brand: 'H&M', category: 'T-shirt', price: 350.00, stock: 80, colors: ['pink'] },
      { id: 6, name: 'Bomber Jacket', brand: 'Zara', category: 'Jacket', price: 1200.00, stock: 15, colors: ['black', 'gray'] },
      { id: 7, name: 'Formal Pants', brand: 'Raymond', category: 'Pants', price: 850.00, stock: 60, colors: ['gray', 'black'] }
    ];

    let filteredProducts = [...products];
    let currentPage = 1;
    const itemsPerPage = 5;

    const tableBody = document.getElementById('tableBody');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const showingStart = document.getElementById('showingStart');
    const showingEnd = document.getElementById('showingEnd');
    const totalCount = document.getElementById('totalCount');
    const searchInput = document.getElementById('searchInput');

    function renderProducts() {
      const start = (currentPage - 1) * itemsPerPage;
      const end = start + itemsPerPage;
      const pageProducts = filteredProducts.slice(start, end);

      tableBody.innerHTML = pageProducts.map(product => `
        <tr>
          <td><div class="product-image"></div></td>
          <td>${product.name}</td>
          <td>${product.brand}</td>
          <td>${product.category}</td>
          <td>â‚¹${product.price.toFixed(2)}</td>
          <td>${product.stock}</td>
          <td>
            <div class="color-dots">
              ${product.colors.map(color => `<span class="color-dot color-${color}"></span>`).join('')}
            </div>
          </td>
          <td>
            <button class="action-btn" onclick="editProduct(${product.id})"><i data-lucide="edit"></i></button>
            <button class="action-btn" onclick="deleteProduct(${product.id})"><i data-lucide="trash-2"></i></button>
          </td>
        </tr>
      `).join('');

      lucide.createIcons();

      // Update pagination info
      const totalItems = filteredProducts.length;
      showingStart.textContent = totalItems > 0 ? start + 1 : 0;
      showingEnd.textContent = Math.min(end, totalItems);
      totalCount.textContent = totalItems;

      prevBtn.disabled = currentPage === 1;
      nextBtn.disabled = end >= totalItems;
    }

    function handleSearch() {
      const term = searchInput.value.toLowerCase();
      filteredProducts = products.filter(p =>
        p.name.toLowerCase().includes(term) || p.brand.toLowerCase().includes(term)
      );
      currentPage = 1;
      renderProducts();
    }

    function editProduct(id) {
      alert("Edit product " + id);
    }

    function deleteProduct(id) {
      if (confirm("Are you sure you want to delete this product?")) {
        products = products.filter(p => p.id !== id);
        filteredProducts = filteredProducts.filter(p => p.id !== id);
        renderProducts();
      }
    }

    function handlePagination() {
      prevBtn.addEventListener("click", () => {
        if (currentPage > 1) {
          currentPage--;
          renderProducts();
        }
      });

      nextBtn.addEventListener("click", () => {
        if ((currentPage * itemsPerPage) < filteredProducts.length) {
          currentPage++;
          renderProducts();
        }
      });
    }

    searchInput.addEventListener("input", handleSearch);

    document.addEventListener("DOMContentLoaded", () => {
      renderProducts();
      handlePagination();
    });
  </script> 
</body>
</html>
