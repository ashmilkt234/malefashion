<%- include('../partials/admin/header') %>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Products</title>
    <link rel="stylesheet" href="/css/addproduct.css">
    <link rel="stylesheet" href="/css/dashboard.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
<div class="container">
    <!-- Header -->
    <div class="header">
        <div class="header-left">
            <button class="back-btn" onclick="goBack()">‚Üê</button>
            <h1 class="header-title">Add Products</h1>
        </div>
    </div>

    <!-- Form -->
    <div class="form-container">
        <form id="productForm" method="POST" action="/admin/addProduct" enctype="multipart/form-data">
            <!-- Image Upload Section -->
            <div class="upload-section">
                <div class="upload-grid">
                    <div class="upload-box" onclick="triggerFileInput('photo1')">
                        <div class="camera-icon">üì∑</div>
                    </div>
                    <div class="upload-box" onclick="triggerFileInput('photo2')">
                        <div class="camera-icon">üì∑</div>
                    </div>
                    <div class="upload-box" onclick="triggerFileInput('photo3')">
                        <div class="camera-icon">üì∑</div>
                    </div>
                </div>
                <div class="upload-labels">
                    <div class="upload-label">Upload Photo 1</div>
                    <div class="upload-label">Upload Photo 2</div>
                    <div class="upload-label">Upload Photo 3</div>
                </div>
            </div>

            <!-- File inputs -->
            <input type="file" name="productImage" id="photo1" class="file-input" accept="image/*" onchange="handleFileUpload(this, 0)">
            <input type="file" name="productImage" id="photo2" class="file-input" accept="image/*" onchange="handleFileUpload(this, 1)">
            <input type="file" name="productImage" id="photo3" class="file-input" accept="image/*" onchange="handleFileUpload(this, 2)">

            <!-- Product Name -->
            <div class="form-group">
                <label class="form-label">Product Name</label>
                <input type="text" name="productName" class="form-input" placeholder="Enter product name">
                <div id="productName-error" class="error-message"></div>
            </div>

            <!-- Category -->
            <div class="form-group">
                <label class="form-label">Category</label>
                <select class="form-select" name="category">
                    <option value="">-- Select Category --</option>
                    <% for(let i = 0; i < category.length; i++) { %>
                        <option value="<%= category[i].name %>"><%= category[i].name %></option>
                    <% } %>
                </select>
                <div id="category-error" class="error-message"></div>
            </div>

            <!-- Sale Price -->
            <div class="form-group">
                <label class="form-label">Sale Price</label>
                <input type="text" name="salesPrice" class="form-input" placeholder="Enter sale price">
                <div id="salePrice-error" class="error-message"></div>
            </div>

            <!-- Quantity -->
            <div class="form-group">
                <label class="form-label">Stock Count</label>
                <input type="number" name="quantity" class="form-input" placeholder="Enter stock count">
                <div id="quantity-error" class="error-message"></div>
            </div>

            <!-- Description -->
            <div class="form-group">
                <label class="form-label">Description</label>
                <textarea name="description" class="form-input" placeholder="Enter description"></textarea>
                <div id="description-error" class="error-message"></div>
            </div>

            <!-- Color -->
            <div class="form-group">
                <label class="form-label">Color</label>
                <select class="form-select" name="color">
                    <option value="">-- Select Color --</option>
                    <option value="red">Red</option>
                    <option value="blue">Blue</option>
                </select>
                <div id="color-error" class="error-message"></div>
            </div>

            <!-- Size -->
            <div class="form-group">
                <label class="form-label">Size</label>
                <select class="form-select" name="size">
                    <option value="">-- Select Size --</option>
                    <option value="M">M</option>
                    <option value="L">L</option>
                </select>
                <div id="size-error" class="error-message"></div>
            </div>

            <!-- Submit -->
            <button type="submit" class="add-btn">Add Now</button>
        </form>
    </div>
</div>

<script>
function triggerFileInput(inputId) {
  document.getElementById(inputId).click();
}

function handleFileUpload(input, index) {
  const file = input.files[0];
  if (file) {
    const uploadBox = document.querySelectorAll('.upload-box')[index];
    uploadBox.classList.add('active');
    const reader = new FileReader();
    reader.onload = function(e) {
      uploadBox.innerHTML = `<img src="${e.target.result}" style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;">`;
    };
    reader.readAsDataURL(file);
  }
}

function goBack() {
  if (window.history.length > 1) {
    window.history.back();
  } else {
    Swal.fire({
      icon: 'info',
      title: 'Oops!',
      text: 'No previous page to go back to',
      confirmButtonColor: '#3085d6'
    });
  }
}

function displayErrorMessage(id, message) {
  const el = document.getElementById(id);
  if (el) el.textContent = message;
}

function clearErrors() {
  document.querySelectorAll('.error-message').forEach(el => el.textContent = '');
}

function validateForm() {
  clearErrors();
  let valid = true;

  const name = document.getElementsByName('productName')[0].value.trim();
  const description = document.getElementsByName('description')[0].value.trim();
  const salesPrice = document.getElementsByName('salesPrice')[0].value.trim();
  const quantity = document.getElementsByName('quantity')[0].value.trim();
  const color = document.getElementsByName('color')[0].value.trim();
  const category = document.getElementsByName('category')[0].value.trim();
  const size = document.getElementsByName('size')[0].value.trim();
  const images = [
    document.getElementById('photo1').files.length,
    document.getElementById('photo2').files.length,
    document.getElementById('photo3').files.length
  ];

  // Product Name
  if (!name) {
    displayErrorMessage('productName-error', 'Please enter a product name.');
    valid = false;
  } else if (name.length < 3) {
    displayErrorMessage('productName-error', 'Product name must be at least 3 characters.');
    valid = false;
  }

  // Category
  if (!category) {
    displayErrorMessage('category-error', 'Please select a category.');
    valid = false;
  }

  // Sale Price
  if (!salesPrice) {
    displayErrorMessage('salePrice-error', 'Please enter a sale price.');
    valid = false;
  } else if (!/^\d+(\.\d{1,2})?$/.test(salesPrice)) {
    displayErrorMessage('salePrice-error', 'Sale price must be a valid number (up to 2 decimals).');
    valid = false;
  } else if (parseFloat(salesPrice) <= 0) {
    displayErrorMessage('salePrice-error', 'Sale price must be greater than 0.');
    valid = false;
  }

  // Quantity (Stock Count)
  if (quantity === "") {
    displayErrorMessage('quantity-error', 'Please enter a stock count.');
    valid = false;
  } else if (isNaN(quantity)) {
    displayErrorMessage('quantity-error', 'Stock count must be a number.');
    valid = false;
  } else if (parseInt(quantity) < 0) {
    displayErrorMessage('quantity-error', 'Stock count cannot be negative.');
    valid = false;
  }

  // Description
  if (!description) {
    displayErrorMessage('description-error', 'Please enter a description.');
    valid = false;
  } else if (description.length < 10) {
    displayErrorMessage('description-error', 'Description must be at least 10 characters.');
    valid = false;
  }

  // Color
  if (!color) {
    displayErrorMessage('color-error', 'Please select a color.');
    valid = false;
  }

  // Size
  if (!size) {
    displayErrorMessage('size-error', 'Please select a size.');
    valid = false;
  }

  // At least one image
  if (images.every(len => len === 0)) {
    Swal.fire({
      icon: 'warning',
      title: 'Oops!',
      text: 'Please upload at least one product image.',
      confirmButtonColor: '#3085d6'
    });
    valid = false;
  }

  return valid;
}

// Prevent typing negative values in stock input immediately
document.getElementsByName('quantity')[0].addEventListener('input', function(e) {
  if (this.value < 0) {
    this.value = 0; // reset to 0 if negative entered
  }
});

// Form submission
document.getElementById('productForm').addEventListener('submit', function(e) {
  if (!validateForm()) {
    e.preventDefault();
  }
});

// Show server messages if redirected with query params
const urlParams = new URLSearchParams(window.location.search);
const successMessage = urlParams.get('success');
const errorMessage = urlParams.get('error');

if (successMessage) {
  Swal.fire({
    icon: 'success',
    title: 'Success!',
    text: successMessage,
    confirmButtonColor: '#3085d6'
  });
}

if (errorMessage) {
  Swal.fire({
    icon: 'error',
    title: 'Error!',
    text: errorMessage,
    confirmButtonColor: '#d33'
  });
}
</script>
